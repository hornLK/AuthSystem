"""empty message

Revision ID: fc9c35be4b45
Revises: 
Create Date: 2018-04-03 07:25:59.224525

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fc9c35be4b45'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('hostgroup',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('produceName', sa.String(length=64), nullable=True),
    sa.Column('moMent', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('produceName')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('roleName', sa.String(length=64), nullable=True),
    sa.Column('pubKey', sa.String(length=256), nullable=True),
    sa.Column('priKey', sa.String(length=256), nullable=True),
    sa.Column('moMent', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_roles_roleName'), 'roles', ['roleName'], unique=True)
    op.create_table('rooms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('roomName', sa.String(length=64), nullable=True),
    sa.Column('moMent', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('roomName')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=64), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('chinese', sa.String(length=64), nullable=True),
    sa.Column('phonenumber', sa.Integer(), nullable=True),
    sa.Column('qqnumber', sa.Integer(), nullable=True),
    sa.Column('weixinnumber', sa.String(length=32), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('authlog',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('authTime', sa.DateTime(), nullable=True),
    sa.Column('returnToken', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hosts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hostName', sa.String(length=64), nullable=True),
    sa.Column('hostIP', sa.String(length=64), nullable=True),
    sa.Column('hostPort', sa.Integer(), nullable=True),
    sa.Column('hostGroup_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['hostGroup_id'], ['hostgroup.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_hosts_hostIP'), 'hosts', ['hostIP'], unique=False)
    op.create_index(op.f('ix_hosts_hostName'), 'hosts', ['hostName'], unique=True)
    op.create_table('roomhostgroup',
    sa.Column('root_id', sa.Integer(), nullable=True),
    sa.Column('hostgroup_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['hostgroup_id'], ['hostgroup.id'], ),
    sa.ForeignKeyConstraint(['root_id'], ['rooms.id'], )
    )
    op.create_table('userkeys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userPubkey', sa.String(length=256), nullable=True),
    sa.Column('userPrikey', sa.String(length=256), nullable=True),
    sa.Column('keyUpdate', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('usertohosts',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('host_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['host_id'], ['hosts.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'host_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('usertohosts')
    op.drop_table('userkeys')
    op.drop_table('roomhostgroup')
    op.drop_index(op.f('ix_hosts_hostName'), table_name='hosts')
    op.drop_index(op.f('ix_hosts_hostIP'), table_name='hosts')
    op.drop_table('hosts')
    op.drop_table('authlog')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('rooms')
    op.drop_index(op.f('ix_roles_roleName'), table_name='roles')
    op.drop_table('roles')
    op.drop_table('hostgroup')
    # ### end Alembic commands ###
